{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GatewayTokenState = exports.Revoked = exports.Frozen = exports.Active = exports.GatewayTokenData = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst solanaBorsh_1 = require(\"./solanaBorsh\");\n\nconst AssignablePublicKey_1 = require(\"./AssignablePublicKey\");\n/**\n * The on-chain structure of a gateway token.\n * Matches: solana/integration-lib/src/state.rs\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\n\n\nclass GatewayTokenData extends solanaBorsh_1.Assignable {\n  static fromAccount(accountData) {\n    return GatewayTokenData.decode(accountData);\n  }\n\n  forAuthority(authority) {\n    return new GatewayTokenData(Object.assign(Object.assign({}, this), {\n      authority: AssignablePublicKey_1.AssignablePublicKey.fromPublicKey(authority)\n    }));\n  }\n\n  static empty(owner) {\n    return new GatewayTokenData({\n      owner: AssignablePublicKey_1.AssignablePublicKey.fromPublicKey(owner || web3_js_1.Keypair.generate().publicKey)\n    });\n  }\n\n}\n\nexports.GatewayTokenData = GatewayTokenData;\n\nclass Active extends solanaBorsh_1.Assignable {}\n\nexports.Active = Active;\n\nclass Frozen extends solanaBorsh_1.Assignable {}\n\nexports.Frozen = Frozen;\n\nclass Revoked extends solanaBorsh_1.Assignable {}\n\nexports.Revoked = Revoked;\n\nclass GatewayTokenState extends solanaBorsh_1.Enum {}\n\nexports.GatewayTokenState = GatewayTokenState;\nsolanaBorsh_1.SCHEMA.set(GatewayTokenData, {\n  kind: \"struct\",\n  fields: [[\"features\", [1]], [\"parentGatewayToken\", {\n    kind: \"option\",\n    type: AssignablePublicKey_1.AssignablePublicKey\n  }], [\"owner\", AssignablePublicKey_1.AssignablePublicKey], [\"ownerIdentity\", {\n    kind: \"option\",\n    type: AssignablePublicKey_1.AssignablePublicKey\n  }], [\"gatekeeperNetwork\", AssignablePublicKey_1.AssignablePublicKey], [\"issuingGatekeeper\", AssignablePublicKey_1.AssignablePublicKey], [\"state\", GatewayTokenState], [\"expiry\", {\n    kind: \"option\",\n    type: \"u64\"\n  }]]\n});\nsolanaBorsh_1.SCHEMA.set(GatewayTokenState, {\n  kind: \"enum\",\n  field: \"enum\",\n  values: [[\"active\", Active], [\"frozen\", Frozen], [\"revoked\", Revoked]]\n});\nsolanaBorsh_1.SCHEMA.set(Active, {\n  kind: \"struct\",\n  fields: []\n});\nsolanaBorsh_1.SCHEMA.set(Frozen, {\n  kind: \"struct\",\n  fields: []\n});\nsolanaBorsh_1.SCHEMA.set(Revoked, {\n  kind: \"struct\",\n  fields: []\n});","map":{"version":3,"sources":["../../src/lib/GatewayTokenData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GatewayTokenState = exports.Revoked = exports.Frozen = exports.Active = exports.GatewayTokenData = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst solanaBorsh_1 = require(\"./solanaBorsh\");\nconst AssignablePublicKey_1 = require(\"./AssignablePublicKey\");\n/**\n * The on-chain structure of a gateway token.\n * Matches: solana/integration-lib/src/state.rs\n *\n * The pattern for these objects is to have their properties dynamically\n * assigned by borsh.decode, as opposed to via a constructor.\n *\n * The imperative assignment operator (!) is used to avoid Typescript\n * complaining about the above.\n */\nclass GatewayTokenData extends solanaBorsh_1.Assignable {\n    static fromAccount(accountData) {\n        return GatewayTokenData.decode(accountData);\n    }\n    forAuthority(authority) {\n        return new GatewayTokenData(Object.assign(Object.assign({}, this), { authority: AssignablePublicKey_1.AssignablePublicKey.fromPublicKey(authority) }));\n    }\n    static empty(owner) {\n        return new GatewayTokenData({\n            owner: AssignablePublicKey_1.AssignablePublicKey.fromPublicKey(owner || web3_js_1.Keypair.generate().publicKey),\n        });\n    }\n}\nexports.GatewayTokenData = GatewayTokenData;\nclass Active extends solanaBorsh_1.Assignable {\n}\nexports.Active = Active;\nclass Frozen extends solanaBorsh_1.Assignable {\n}\nexports.Frozen = Frozen;\nclass Revoked extends solanaBorsh_1.Assignable {\n}\nexports.Revoked = Revoked;\nclass GatewayTokenState extends solanaBorsh_1.Enum {\n}\nexports.GatewayTokenState = GatewayTokenState;\nsolanaBorsh_1.SCHEMA.set(GatewayTokenData, {\n    kind: \"struct\",\n    fields: [\n        [\"features\", [1]],\n        [\"parentGatewayToken\", { kind: \"option\", type: AssignablePublicKey_1.AssignablePublicKey }],\n        [\"owner\", AssignablePublicKey_1.AssignablePublicKey],\n        [\"ownerIdentity\", { kind: \"option\", type: AssignablePublicKey_1.AssignablePublicKey }],\n        [\"gatekeeperNetwork\", AssignablePublicKey_1.AssignablePublicKey],\n        [\"issuingGatekeeper\", AssignablePublicKey_1.AssignablePublicKey],\n        [\"state\", GatewayTokenState],\n        [\"expiry\", { kind: \"option\", type: \"u64\" }],\n    ],\n});\nsolanaBorsh_1.SCHEMA.set(GatewayTokenState, {\n    kind: \"enum\",\n    field: \"enum\",\n    values: [\n        [\"active\", Active],\n        [\"frozen\", Frozen],\n        [\"revoked\", Revoked],\n    ],\n});\nsolanaBorsh_1.SCHEMA.set(Active, { kind: \"struct\", fields: [] });\nsolanaBorsh_1.SCHEMA.set(Frozen, { kind: \"struct\", fields: [] });\nsolanaBorsh_1.SCHEMA.set(Revoked, { kind: \"struct\", fields: [] });\n//# sourceMappingURL=GatewayTokenData.js.map"]},"metadata":{},"sourceType":"script"}