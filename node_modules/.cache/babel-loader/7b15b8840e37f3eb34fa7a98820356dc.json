{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst remoteSign_1 = require(\"../utils/remoteSign\");\n\nconst logger_1 = __importDefault(require(\"../logger\"));\n\nconst logDebug = function (message) {\n  let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.debug(`[useCivicPassEventListener] ${message}`, obj);\n};\n\nconst logError = function (message) {\n  let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.error(`[useCivicPassEventListener] ${message}`, obj);\n};\n\nconst useCivicPassEventListener = _ref => {\n  let {\n    wallet,\n    chainImplementation,\n    remoteSign\n  } = _ref;\n\n  const dispatchEvent = async response => {\n    if (!wallet) return;\n    const remoteSigner = remoteSign !== null && remoteSign !== void 0 ? remoteSign : (0, remoteSign_1.remoteSignWindowEventEmitterImplementation)();\n    const events = {\n      [remoteSign_1.CivicSignEventTypeRequest.REQUEST_PUBLIC_KEY]: () => new Promise(resolve => {\n        remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendPublicKey(wallet.publicKey);\n        resolve();\n      }),\n      [remoteSign_1.CivicSignEventTypeRequest.REQUEST_DID]: () => new Promise(resolve => {\n        remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendDid(`did:sol:${wallet.publicKey}`);\n        resolve();\n      }),\n      [remoteSign_1.CivicSignEventTypeRequest.REQUEST_SIGNED_PROOF]: async () => {\n        try {\n          const proof = await chainImplementation.proveWalletOwnership();\n          remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendSignedProof(proof);\n        } catch (err) {\n          logError('Error signing proof', err);\n        }\n      }\n    };\n    const event = events[response];\n\n    if (event) {\n      await event();\n      logDebug('Successfully emitted compliance event', response);\n    }\n  };\n  /**\n   * Listen for post messages from the compliance iframe and dispatch events\n   * based on the event type\n   */\n\n\n  (0, react_1.useEffect)(() => {\n    const handler = async response => {\n      await dispatchEvent(response.data);\n    };\n\n    window.addEventListener('message', handler);\n    return () => {\n      logDebug('Removing event listener for compliance');\n      return window.removeEventListener('message', handler);\n    };\n  }, []);\n  return {\n    dispatchEvent\n  };\n};\n\nexports.default = useCivicPassEventListener;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","remoteSign_1","logger_1","logDebug","message","obj","default","debug","logError","error","useCivicPassEventListener","wallet","chainImplementation","remoteSign","dispatchEvent","response","remoteSigner","remoteSignWindowEventEmitterImplementation","events","CivicSignEventTypeRequest","REQUEST_PUBLIC_KEY","Promise","resolve","sendPublicKey","publicKey","REQUEST_DID","sendDid","REQUEST_SIGNED_PROOF","proof","proveWalletOwnership","sendSignedProof","err","event","useEffect","handler","data","window","addEventListener","removeEventListener"],"sources":["/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/useHooks/useCivicPassEventListener.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst remoteSign_1 = require(\"../utils/remoteSign\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst logDebug = (message, obj = null) => logger_1.default.debug(`[useCivicPassEventListener] ${message}`, obj);\nconst logError = (message, obj = null) => logger_1.default.error(`[useCivicPassEventListener] ${message}`, obj);\nconst useCivicPassEventListener = ({ wallet, chainImplementation, remoteSign, }) => {\n    const dispatchEvent = async (response) => {\n        if (!wallet)\n            return;\n        const remoteSigner = remoteSign !== null && remoteSign !== void 0 ? remoteSign : (0, remoteSign_1.remoteSignWindowEventEmitterImplementation)();\n        const events = {\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_PUBLIC_KEY]: () => new Promise((resolve) => {\n                remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendPublicKey(wallet.publicKey);\n                resolve();\n            }),\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_DID]: () => new Promise((resolve) => {\n                remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendDid(`did:sol:${wallet.publicKey}`);\n                resolve();\n            }),\n            [remoteSign_1.CivicSignEventTypeRequest.REQUEST_SIGNED_PROOF]: async () => {\n                try {\n                    const proof = await chainImplementation.proveWalletOwnership();\n                    remoteSigner === null || remoteSigner === void 0 ? void 0 : remoteSigner.sendSignedProof(proof);\n                }\n                catch (err) {\n                    logError('Error signing proof', err);\n                }\n            },\n        };\n        const event = events[response];\n        if (event) {\n            await event();\n            logDebug('Successfully emitted compliance event', response);\n        }\n    };\n    /**\n     * Listen for post messages from the compliance iframe and dispatch events\n     * based on the event type\n     */\n    (0, react_1.useEffect)(() => {\n        const handler = async (response) => {\n            await dispatchEvent(response.data);\n        };\n        window.addEventListener('message', handler);\n        return () => {\n            logDebug('Removing event listener for compliance');\n            return window.removeEventListener('message', handler);\n        };\n    }, []);\n    return { dispatchEvent };\n};\nexports.default = useCivicPassEventListener;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}