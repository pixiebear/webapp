{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GatewayTokenActionCreatorImplementation = void 0;\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nvar types_1 = require(\"../types\");\n\nvar logger_1 = __importDefault(require(\"../logger\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar GatewayTokenActionCreatorImplementation = function GatewayTokenActionCreatorImplementation(_ref) {\n  var wallet = _ref.wallet,\n      chainImplementation = _ref.chainImplementation,\n      gatekeeperClient = _ref.gatekeeperClient,\n      dispatch = _ref.dispatch,\n      networkConfig = _ref.networkConfig;\n\n  var logDebug = function logDebug(message) {\n    var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return logger_1.default.debug(\"[useChain] \".concat(message), obj);\n  };\n\n  var logError = function logError(message) {\n    var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return logger_1.default.error(\"[useChain] \".concat(message), obj);\n  };\n\n  var isTokenCreated = function isTokenCreated(code) {\n    return code === 200;\n  };\n\n  var isTokenPending = function isTokenPending(code) {\n    return code === 202 || code === 404;\n  };\n\n  var isFailure = function isFailure(code) {\n    return !isTokenPending(code) && code >= 400;\n  };\n\n  var pollForActiveOnChainToken = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", (0, utils_1.pollUntilConditionMet)(chainImplementation.findGatewayToken, function (onChainToken) {\n                if (!onChainToken) return false; // keep polling\n\n                // keep polling\n                if (!onChainToken.expiryTime) return true;\n                if (onChainToken.state === types_1.State.ACTIVE) return true;\n                throw new Error('Token found but not ACTIVE');\n              }, networkConfig.pollChainIntervalMilliseconds, networkConfig.pollChainNumberRetries));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function pollForActiveOnChainToken() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var waitForGatewayToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var token, state;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return pollForActiveOnChainToken();\n\n            case 3:\n              token = _context2.sent;\n              logDebug('Result from pollForActiveOnChainToken', token);\n\n              if (token) {\n                _context2.next = 8;\n                break;\n              }\n\n              logError('Token not found onChain');\n              throw new Error('Token not found onChain');\n\n            case 8:\n              dispatch({\n                type: 'tokenChange',\n                token: token\n              });\n              dispatch({\n                type: 'civicPass_check_token_status',\n                token: token\n              });\n              return _context2.abrupt(\"return\");\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](0);\n              logError('Failed to find Gateway token on-chain, checking with gatekeeper');\n              _context2.next = 18;\n              return gatekeeperClient().getGatekeeperStatus(wallet.publicKey);\n\n            case 18:\n              state = _context2.sent;\n\n              if (!isTokenPending(state)) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 22;\n              return waitForGatewayToken();\n\n            case 22:\n              // retries have been exhausted and we still don't have a token\n              // or the gatekeeper threw an error during issuance attempt\n              if (isTokenCreated(state) || isFailure(state)) {\n                logError('Failed to find Gateway token with gatekeeper status code', types_1.GatekeeperRecordState[state]);\n                dispatch({\n                  type: 'tokenNotFoundError'\n                });\n              }\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 13]]);\n    }));\n\n    return function waitForGatewayToken() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    waitForGatewayToken: waitForGatewayToken\n  };\n};\n\nexports.GatewayTokenActionCreatorImplementation = GatewayTokenActionCreatorImplementation;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","GatewayTokenActionCreatorImplementation","types_1","require","logger_1","utils_1","wallet","chainImplementation","gatekeeperClient","dispatch","networkConfig","logDebug","message","obj","default","debug","logError","error","isTokenCreated","code","isTokenPending","isFailure","pollForActiveOnChainToken","pollUntilConditionMet","findGatewayToken","onChainToken","expiryTime","state","State","ACTIVE","Error","pollChainIntervalMilliseconds","pollChainNumberRetries","waitForGatewayToken","token","type","getGatekeeperStatus","publicKey","GatekeeperRecordState"],"sources":["/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/actionCreator/gatewayToken.actionCreator.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GatewayTokenActionCreatorImplementation = void 0;\n/* eslint-disable @typescript-eslint/no-unused-vars */\nconst types_1 = require(\"../types\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst utils_1 = require(\"./utils\");\nconst GatewayTokenActionCreatorImplementation = ({ wallet, chainImplementation, gatekeeperClient, dispatch, networkConfig, }) => {\n    const logDebug = (message, obj = null) => logger_1.default.debug(`[useChain] ${message}`, obj);\n    const logError = (message, obj = null) => logger_1.default.error(`[useChain] ${message}`, obj);\n    const isTokenCreated = (code) => code === 200;\n    const isTokenPending = (code) => code === 202 || code === 404;\n    const isFailure = (code) => !isTokenPending(code) && code >= 400;\n    const pollForActiveOnChainToken = async () => {\n        return (0, utils_1.pollUntilConditionMet)(chainImplementation.findGatewayToken, (onChainToken) => {\n            if (!onChainToken)\n                return false; // keep polling\n            if (!onChainToken.expiryTime)\n                return true;\n            if (onChainToken.state === types_1.State.ACTIVE)\n                return true;\n            throw new Error('Token found but not ACTIVE');\n        }, networkConfig.pollChainIntervalMilliseconds, networkConfig.pollChainNumberRetries);\n    };\n    const waitForGatewayToken = async () => {\n        // poll the gatekeeper until we have a status for a created record\n        // if we don't get a created token, then we consider it a failure\n        try {\n            const token = await pollForActiveOnChainToken();\n            logDebug('Result from pollForActiveOnChainToken', token);\n            if (!token) {\n                logError('Token not found onChain');\n                throw new Error('Token not found onChain');\n            }\n            dispatch({ type: 'tokenChange', token });\n            dispatch({ type: 'civicPass_check_token_status', token });\n            return;\n        }\n        catch (error) {\n            logError('Failed to find Gateway token on-chain, checking with gatekeeper');\n            const state = await gatekeeperClient().getGatekeeperStatus(wallet.publicKey);\n            // if the token is still pending or in review then keep polling on-chain\n            if (isTokenPending(state)) {\n                await waitForGatewayToken();\n            }\n            // retries have been exhausted and we still don't have a token\n            // or the gatekeeper threw an error during issuance attempt\n            if (isTokenCreated(state) || isFailure(state)) {\n                logError('Failed to find Gateway token with gatekeeper status code', types_1.GatekeeperRecordState[state]);\n                dispatch({ type: 'tokenNotFoundError' });\n            }\n        }\n    };\n    return {\n        waitForGatewayToken,\n    };\n};\nexports.GatewayTokenActionCreatorImplementation = GatewayTokenActionCreatorImplementation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}