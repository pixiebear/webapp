{"ast":null,"code":"import _classCallCheck from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/nikola/Sites/candy-machine/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport var PhantomWalletAdapter = /*#__PURE__*/function (_BaseMessageSignerWal) {\n  _inherits(PhantomWalletAdapter, _BaseMessageSignerWal);\n\n  var _super = _createSuper(PhantomWalletAdapter);\n\n  function PhantomWalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PhantomWalletAdapter);\n\n    _this = _super.call(this);\n\n    _this._disconnected = function () {\n      var wallet = _this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', _this._disconnected);\n        _this._wallet = null;\n        _this._publicKey = null;\n\n        _this.emit('error', new WalletDisconnectedError());\n\n        _this.emit('disconnect');\n      }\n    };\n\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n\n  _createClass(PhantomWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      var _a;\n\n      return typeof window !== 'undefined' && !!((_a = window.solana) === null || _a === void 0 ? void 0 : _a.isPhantom);\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet, handleDisconnect, publicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                wallet = typeof window !== 'undefined' && window.solana;\n\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new WalletNotFoundError();\n\n              case 7:\n                if (wallet.isPhantom) {\n                  _context.next = 9;\n                  break;\n                }\n\n                throw new WalletNotInstalledError();\n\n              case 9:\n                if (wallet.isConnected) {\n                  _context.next = 24;\n                  break;\n                }\n\n                // HACK: Phantom doesn't reject or emit an event if the popup is closed\n                handleDisconnect = wallet._handleDisconnect;\n                _context.prev = 11;\n                _context.next = 14;\n                return new Promise(function (resolve, reject) {\n                  var connect = function connect() {\n                    wallet.off('connect', connect);\n                    resolve();\n                  };\n\n                  wallet._handleDisconnect = function () {\n                    wallet.off('connect', connect);\n                    reject(new WalletWindowClosedError());\n\n                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                      args[_key] = arguments[_key];\n                    }\n\n                    return handleDisconnect.apply(wallet, args);\n                  };\n\n                  wallet.on('connect', connect);\n                  wallet.connect().catch(function (reason) {\n                    wallet.off('connect', connect);\n                    reject(reason);\n                  });\n                });\n\n              case 14:\n                _context.next = 21;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](11);\n\n                if (!(_context.t0 instanceof WalletError)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                throw _context.t0;\n\n              case 20:\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 21:\n                _context.prev = 21;\n                wallet._handleDisconnect = handleDisconnect;\n                return _context.finish(21);\n\n              case 24:\n                if (wallet.publicKey) {\n                  _context.next = 26;\n                  break;\n                }\n\n                throw new WalletConnectionError();\n\n              case 26:\n                _context.prev = 26;\n                publicKey = new PublicKey(wallet.publicKey.toBytes());\n                _context.next = 33;\n                break;\n\n              case 30:\n                _context.prev = 30;\n                _context.t1 = _context[\"catch\"](26);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 33:\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 43;\n                break;\n\n              case 39:\n                _context.prev = 39;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 43:\n                _context.prev = 43;\n                this._connecting = false;\n                return _context.finish(43);\n\n              case 46:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 39, 43, 46], [11, 16, 21, 24], [26, 30]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return wallet.disconnect();\n\n              case 8:\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n\n              case 13:\n                this.emit('disconnect');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 10]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.signTransaction(transaction);\n\n              case 7:\n                _context3.t0 = _context3.sent;\n\n                if (_context3.t0) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.t0 = transaction;\n\n              case 10:\n                return _context3.abrupt(\"return\", _context3.t0);\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n\n              case 16:\n                _context3.next = 22;\n                break;\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context4.prev = 4;\n                _context4.next = 7;\n                return wallet.signAllTransactions(transactions);\n\n              case 7:\n                _context4.t0 = _context4.sent;\n\n                if (_context4.t0) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.t0 = transactions;\n\n              case 10:\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](4);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n\n              case 16:\n                _context4.next = 22;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var wallet, _yield$wallet$signMes, signature;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context5.prev = 4;\n                _context5.next = 7;\n                return wallet.signMessage(message);\n\n              case 7:\n                _yield$wallet$signMes = _context5.sent;\n                signature = _yield$wallet$signMes.signature;\n                return _context5.abrupt(\"return\", Uint8Array.from(signature));\n\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](4);\n                throw new WalletSignTransactionError(_context5.t0 === null || _context5.t0 === void 0 ? void 0 : _context5.t0.message, _context5.t0);\n\n              case 15:\n                _context5.next = 21;\n                break;\n\n              case 17:\n                _context5.prev = 17;\n                _context5.t1 = _context5[\"catch\"](0);\n                this.emit('error', _context5.t1);\n                throw _context5.t1;\n\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 17], [4, 12]]);\n      }));\n    }\n  }]);\n\n  return PhantomWalletAdapter;\n}(BaseMessageSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError, WalletWindowClosedError, } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport class PhantomWalletAdapter extends BaseMessageSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._disconnected = () => {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                this.emit('error', new WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._connecting = false;\n        this._wallet = null;\n        this._publicKey = null;\n        if (!this.ready)\n            pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get ready() {\n        var _a;\n        return typeof window !== 'undefined' && !!((_a = window.solana) === null || _a === void 0 ? void 0 : _a.isPhantom);\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                const wallet = typeof window !== 'undefined' && window.solana;\n                if (!wallet)\n                    throw new WalletNotFoundError();\n                if (!wallet.isPhantom)\n                    throw new WalletNotInstalledError();\n                if (!wallet.isConnected) {\n                    // HACK: Phantom doesn't reject or emit an event if the popup is closed\n                    const handleDisconnect = wallet._handleDisconnect;\n                    try {\n                        yield new Promise((resolve, reject) => {\n                            const connect = () => {\n                                wallet.off('connect', connect);\n                                resolve();\n                            };\n                            wallet._handleDisconnect = (...args) => {\n                                wallet.off('connect', connect);\n                                reject(new WalletWindowClosedError());\n                                return handleDisconnect.apply(wallet, args);\n                            };\n                            wallet.on('connect', connect);\n                            wallet.connect().catch((reason) => {\n                                wallet.off('connect', connect);\n                                reject(reason);\n                            });\n                        });\n                    }\n                    catch (error) {\n                        if (error instanceof WalletError)\n                            throw error;\n                        throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                    }\n                    finally {\n                        wallet._handleDisconnect = handleDisconnect;\n                    }\n                }\n                if (!wallet.publicKey)\n                    throw new WalletConnectionError();\n                let publicKey;\n                try {\n                    publicKey = new PublicKey(wallet.publicKey.toBytes());\n                }\n                catch (error) {\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                try {\n                    yield wallet.disconnect();\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n            }\n            this.emit('disconnect');\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signTransaction(transaction)) || transaction;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signAllTransactions(transactions)) || transactions;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    const { signature } = yield wallet.signMessage(message);\n                    return Uint8Array.from(signature);\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}