{"ast":null,"code":"/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"i\",\n      I: \"\\u0131\",\n      İ: \"i\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"i\",\n      I: \"\\u0131\",\n      İ: \"i\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"i\\u0307\",\n      J: \"j\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"i\\u0307\\u0300\",\n      Í: \"i\\u0307\\u0301\",\n      Ĩ: \"i\\u0307\\u0303\"\n    }\n  }\n};\n/**\n * Localized lower case.\n */\n\nexport function localeLowerCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\n\nexport function lowerCase(str) {\n  return str.toLowerCase();\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAQA;;AAEG;AACH,IAAM,gBAAgB,GAA2B;EAC/C,EAAE,EAAE;IACF,MAAM,EAAE,6BADN;IAEF,GAAG,EAAE;MACH,CAAC,EAAE,GADA;MAEH,CAAC,EAAE,QAFA;MAGH,EAAE,EAAE;IAHD;EAFH,CAD2C;EAS/C,EAAE,EAAE;IACF,MAAM,EAAE,SADN;IAEF,GAAG,EAAE;MACH,CAAC,EAAE,GADA;MAEH,CAAC,EAAE,QAFA;MAGH,EAAE,EAAE;IAHD;EAFH,CAT2C;EAiB/C,EAAE,EAAE;IACF,MAAM,EAAE,4CADN;IAEF,GAAG,EAAE;MACH,CAAC,EAAE,SADA;MAEH,CAAC,EAAE,SAFA;MAGH,CAAC,EAAE,cAHA;MAIH,CAAC,EAAE,eAJA;MAKH,CAAC,EAAE,eALA;MAMH,CAAC,EAAE;IANA;EAFH;AAjB2C,CAAjD;AA8BA;;AAEG;;AACH,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAuC,MAAvC,EAAqD;EACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAP,EAAD,CAA7B;EACA,IAAI,IAAJ,EAAU,OAAO,SAAS,CAAC,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,MAAjB,EAAyB,UAAC,CAAD,EAAE;IAAK,OAAA,IAAI,CAAC,GAAL,CAAA,CAAA,CAAA;EAAW,CAA3C,CAAD,CAAhB;EACV,OAAO,SAAS,CAAC,GAAD,CAAhB;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,SAAV,CAAoB,GAApB,EAA+B;EACnC,OAAO,GAAG,CAAC,WAAJ,EAAP;AACD","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}