{"ast":null,"code":"var _jsxFileName = \"/Users/nikola/Sites/candy-machine/candy-machine-ui/src/components/faq/Card/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\nexport const Card = /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor\n  } = _ref;\n  const y = useMotionValue(0);\n  const zIndex = useMotionValue(isSelected ? 2 : 0); // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n\n  const inverted = useInvertedBorderRadius(20); // We'll use the opened card element to calculate the scroll constraints\n\n  const cardRef = useRef(null);\n  const constraints = useScrollConstraints(cardRef, isSelected);\n\n  function checkSwipeToDismiss() {\n    y.get() > dismissDistance && history.push(\"/\");\n  }\n\n  function checkZIndex(latest) {\n    if (isSelected) {\n      zIndex.set(2);\n    } else if (!isSelected && latest.scaleX < 1.01) {\n      zIndex.set(0);\n    }\n  } // When this card is selected, attach a wheel event listener\n\n\n  const containerRef = useRef(null);\n  useWheelScroll(containerRef, y, constraints, checkSwipeToDismiss, isSelected);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    ref: containerRef,\n    className: `card`,\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      isSelected: isSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-content-container ${isSelected && \"open\"}`,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: cardRef,\n        className: \"card-content\",\n        style: { ...inverted,\n          zIndex,\n          y\n        },\n        layoutTransition: isSelected ? openSpring : closeSpring,\n        drag: isSelected ? \"y\" : false,\n        dragConstraints: constraints,\n        onDrag: checkSwipeToDismiss,\n        onUpdate: checkZIndex,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          id: id,\n          isSelected: isSelected,\n          pointOfInterest: pointOfInterest,\n          backgroundColor: backgroundColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          title: title,\n          category: category,\n          isSelected: isSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ContentPlaceholder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), !isSelected && /*#__PURE__*/_jsxDEV(Link, {\n      to: id,\n      className: `card-open-link`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}, \"ngHcWLq8ej57Rd8NE3E26BSJQqo=\", false, function () {\n  return [useMotionValue, useMotionValue, useInvertedBorderRadius, useScrollConstraints, useWheelScroll];\n}), (prev, next) => prev.isSelected === next.isSelected);\n_c2 = Card;\n\nconst Overlay = _ref2 => {\n  let {\n    isSelected\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: false,\n    animate: {\n      opacity: isSelected ? 1 : 0\n    },\n    transition: {\n      duration: 0.2\n    },\n    style: {\n      pointerEvents: isSelected ? \"auto\" : \"none\"\n    },\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Overlay;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card$memo\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Overlay\");","map":{"version":3,"names":["React","memo","useRef","motion","useMotionValue","Link","useInvertedBorderRadius","ContentPlaceholder","Title","Image","openSpring","closeSpring","useScrollConstraints","useWheelScroll","dismissDistance","Card","isSelected","id","title","category","history","pointOfInterest","backgroundColor","y","zIndex","inverted","cardRef","constraints","checkSwipeToDismiss","get","push","checkZIndex","latest","set","scaleX","containerRef","prev","next","Overlay","opacity","duration","pointerEvents"],"sources":["/Users/nikola/Sites/candy-machine/candy-machine-ui/src/components/faq/Card/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { CardData } from \"../types\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n\ninterface Props extends CardData {\n  isSelected: boolean;\n  history: {\n    push: (route: string) => void;\n  };\n}\n\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\n\nexport const Card = memo(\n  ({\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor\n  }: Props) => {\n    const y = useMotionValue(0);\n    const zIndex = useMotionValue(isSelected ? 2 : 0);\n\n    // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n    const inverted = useInvertedBorderRadius(20);\n\n    // We'll use the opened card element to calculate the scroll constraints\n    const cardRef = useRef(null);\n    const constraints = useScrollConstraints(cardRef, isSelected);\n\n    function checkSwipeToDismiss() {\n      y.get() > dismissDistance && history.push(\"/\");\n    }\n\n    function checkZIndex(latest) {\n      if (isSelected) {\n        zIndex.set(2);\n      } else if (!isSelected && latest.scaleX < 1.01) {\n        zIndex.set(0);\n      }\n    }\n\n    // When this card is selected, attach a wheel event listener\n    const containerRef = useRef(null);\n    useWheelScroll(\n      containerRef,\n      y,\n      constraints,\n      checkSwipeToDismiss,\n      isSelected\n    );\n\n    return (\n      <li ref={containerRef} className={`card`}>\n        <Overlay isSelected={isSelected} />\n        <div className={`card-content-container ${isSelected && \"open\"}`}>\n          <motion.div\n            ref={cardRef}\n            className=\"card-content\"\n            style={{ ...inverted, zIndex, y }}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            drag={isSelected ? \"y\" : false}\n            dragConstraints={constraints}\n            onDrag={checkSwipeToDismiss}\n            onUpdate={checkZIndex}\n          >\n            <Image\n              id={id}\n              isSelected={isSelected}\n              pointOfInterest={pointOfInterest}\n              backgroundColor={backgroundColor}\n            />\n            <Title title={title} category={category} isSelected={isSelected} />\n            <ContentPlaceholder />\n          </motion.div>\n        </div>\n        {!isSelected && <Link to={id} className={`card-open-link`} />}\n      </li>\n    );\n  },\n  (prev, next) => prev.isSelected === next.isSelected\n);\n\nconst Overlay = ({ isSelected }) => (\n  <motion.div\n    initial={false}\n    animate={{ opacity: isSelected ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isSelected ? \"auto\" : \"none\" }}\n    className=\"overlay\"\n  >\n    <Link to=\"/\" />\n  </motion.div>\n);\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,OAA7B;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,eAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AASA;AACA;AACA,MAAMC,eAAe,GAAG,GAAxB;AAEA,OAAO,MAAMC,IAAI,gBAAGd,IAAI,SACtB,QAQa;EAAA;;EAAA,IARZ;IACCe,UADD;IAECC,EAFD;IAGCC,KAHD;IAICC,QAJD;IAKCC,OALD;IAMCC,eAND;IAOCC;EAPD,CAQY;EACX,MAAMC,CAAC,GAAGnB,cAAc,CAAC,CAAD,CAAxB;EACA,MAAMoB,MAAM,GAAGpB,cAAc,CAACY,UAAU,GAAG,CAAH,GAAO,CAAlB,CAA7B,CAFW,CAIX;;EACA,MAAMS,QAAQ,GAAGnB,uBAAuB,CAAC,EAAD,CAAxC,CALW,CAOX;;EACA,MAAMoB,OAAO,GAAGxB,MAAM,CAAC,IAAD,CAAtB;EACA,MAAMyB,WAAW,GAAGf,oBAAoB,CAACc,OAAD,EAAUV,UAAV,CAAxC;;EAEA,SAASY,mBAAT,GAA+B;IAC7BL,CAAC,CAACM,GAAF,KAAUf,eAAV,IAA6BM,OAAO,CAACU,IAAR,CAAa,GAAb,CAA7B;EACD;;EAED,SAASC,WAAT,CAAqBC,MAArB,EAA6B;IAC3B,IAAIhB,UAAJ,EAAgB;MACdQ,MAAM,CAACS,GAAP,CAAW,CAAX;IACD,CAFD,MAEO,IAAI,CAACjB,UAAD,IAAegB,MAAM,CAACE,MAAP,GAAgB,IAAnC,EAAyC;MAC9CV,MAAM,CAACS,GAAP,CAAW,CAAX;IACD;EACF,CArBU,CAuBX;;;EACA,MAAME,YAAY,GAAGjC,MAAM,CAAC,IAAD,CAA3B;EACAW,cAAc,CACZsB,YADY,EAEZZ,CAFY,EAGZI,WAHY,EAIZC,mBAJY,EAKZZ,UALY,CAAd;EAQA,oBACE;IAAI,GAAG,EAAEmB,YAAT;IAAuB,SAAS,EAAG,MAAnC;IAAA,wBACE,QAAC,OAAD;MAAS,UAAU,EAAEnB;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAG,0BAAyBA,UAAU,IAAI,MAAO,EAA/D;MAAA,uBACE,QAAC,MAAD,CAAQ,GAAR;QACE,GAAG,EAAEU,OADP;QAEE,SAAS,EAAC,cAFZ;QAGE,KAAK,EAAE,EAAE,GAAGD,QAAL;UAAeD,MAAf;UAAuBD;QAAvB,CAHT;QAIE,gBAAgB,EAAEP,UAAU,GAAGN,UAAH,GAAgBC,WAJ9C;QAKE,IAAI,EAAEK,UAAU,GAAG,GAAH,GAAS,KAL3B;QAME,eAAe,EAAEW,WANnB;QAOE,MAAM,EAAEC,mBAPV;QAQE,QAAQ,EAAEG,WARZ;QAAA,wBAUE,QAAC,KAAD;UACE,EAAE,EAAEd,EADN;UAEE,UAAU,EAAED,UAFd;UAGE,eAAe,EAAEK,eAHnB;UAIE,eAAe,EAAEC;QAJnB;UAAA;UAAA;UAAA;QAAA,QAVF,eAgBE,QAAC,KAAD;UAAO,KAAK,EAAEJ,KAAd;UAAqB,QAAQ,EAAEC,QAA/B;UAAyC,UAAU,EAAEH;QAArD;UAAA;UAAA;UAAA;QAAA,QAhBF,eAiBE,QAAC,kBAAD;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,EAuBG,CAACA,UAAD,iBAAe,QAAC,IAAD;MAAM,EAAE,EAAEC,EAAV;MAAc,SAAS,EAAG;IAA1B;MAAA;MAAA;MAAA;IAAA,QAvBlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CArEqB;EAAA,QAUVb,cAVU,EAWLA,cAXK,EAcHE,uBAdG,EAkBAM,oBAlBA,EAkCpBC,cAlCoB;AAAA,IAsEtB,CAACuB,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACpB,UAAL,KAAoBqB,IAAI,CAACrB,UAtEnB,CAAjB;MAAMD,I;;AAyEb,MAAMuB,OAAO,GAAG;EAAA,IAAC;IAAEtB;EAAF,CAAD;EAAA,oBACd,QAAC,MAAD,CAAQ,GAAR;IACE,OAAO,EAAE,KADX;IAEE,OAAO,EAAE;MAAEuB,OAAO,EAAEvB,UAAU,GAAG,CAAH,GAAO;IAA5B,CAFX;IAGE,UAAU,EAAE;MAAEwB,QAAQ,EAAE;IAAZ,CAHd;IAIE,KAAK,EAAE;MAAEC,aAAa,EAAEzB,UAAU,GAAG,MAAH,GAAY;IAAvC,CAJT;IAKE,SAAS,EAAC,SALZ;IAAA,uBAOE,QAAC,IAAD;MAAM,EAAE,EAAC;IAAT;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADc;AAAA,CAAhB;;MAAMsB,O"},"metadata":{},"sourceType":"module"}